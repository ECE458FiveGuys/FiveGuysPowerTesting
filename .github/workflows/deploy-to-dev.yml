# This workflow will deploy to the dev server by pulling from master, building project, and running tests.

name: CI
on: [push]
jobs:
  deploy:
    name: "Deploy to staging"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host dev_server
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.DEPLOY_USER }}
          SSH_KEY: ${{ secrets.DEPLOY_KEY }}
          SSH_HOST: ${{ secrets.DEPLOY_HOST }}

      - name: Stop the server
        run: ssh dev_server 'sudo systemctl stop gunicorn && sudo systemctl stop nginx'

      - name: Check out the source
        run: ssh dev_server 'cd ~/FiveGuysPowerTesting && git pull'

      - name: Add secret key
        run: ssh dev_server 'echo "$SECRET_KEY" > ~/FiveGuysPowerTesting/FiveGuysPowerTesting/secret_settings.py'
        env:
          SECRET_KEY: ${{ secrets.DEPLOY_SECRET_KEY }}

      - name: Add secret oauth settings
        run: ssh dev_server 'echo "$SECRET_OAUTH" > ~/FiveGuysPowerTesting/user_portal/secrets.py'
        env:
          SECRET_OAUTH: ${{ secrets.DEPLOY_OAUTH }}

      - name: Install dependencies
        run: ssh dev_server 'cd FiveGuysPowerTesting && source env/bin/activate && pip install -r requirements.txt && deactivate'
        
      - name: Perform migrations
        run: ssh dev_server 'cd FiveGuysPowerTesting && source env/bin/activate && python manage.py makemigrations && python manage.py migrate && python manage.py create_groups && python manage.py collectstatic --noinput && deactivate'

      - name: Test Code
        run: ssh dev_server 'cd FiveGuysPowerTesting && source env/bin/activate && python manage.py test && deactivate'

      - name: Start the server
        if: ${{ always() }}
        run: ssh dev_server 'sudo systemctl start gunicorn && sudo systemctl start nginx'
